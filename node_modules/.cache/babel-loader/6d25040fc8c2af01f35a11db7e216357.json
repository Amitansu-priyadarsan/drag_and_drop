{"ast":null,"code":"var _jsxFileName = \"/Users/NI017/Downloads/project1/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ThemeProvider, CssBaseline } from \"@mui/material\";\nimport { DndProvider } from \"react-dnd\";\nimport { Tree, MultiBackend, getBackendOptions } from \"@minoru/react-dnd-treeview\";\nimport { CustomNode } from \"./CustomNode\";\nimport { CustomDragPreview } from \"./CustomDragPreview\";\nimport { theme } from \"./theme\";\nimport styles from \"./App.module.css\";\nimport SampleData from \"./sample_data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [treeData, setTreeData] = useState(SampleData);\n  const handleDrop = newTree => setTreeData(newTree);\n  const [draggingNode, setDraggingNode] = useState();\n  const [nodeList, setNodeList] = useState([]);\n  function updateNode(node, depth, hasChild) {\n    let checkExist = false;\n    nodeList.map(value => {\n      if (value.id == node.id) {\n        value.depth = depth;\n        value.hasChild = hasChild;\n        value.parent = node.parent;\n        checkExist = true;\n      }\n    });\n    if (checkExist) {\n      setNodeList(nodeList);\n    } else {\n      node.depth = depth;\n      node.hasChild = hasChild;\n      nodeList.push(node);\n      setNodeList(nodeList);\n    }\n  }\n  function checkChildIsFolder(parentID) {\n    let fileExist = false;\n    nodeList.map(value => {\n      if (value.parent == parentID) {\n        if (value.data.fileType != \"text\") {\n          fileExist = true;\n        }\n      }\n    });\n    return fileExist;\n  }\n  function getDropTarget(dropTargetId) {\n    let dropTarget;\n    nodeList.map(value => {\n      if (value.id == dropTargetId) {\n        dropTarget = value;\n      }\n    });\n    return dropTarget;\n  }\n  function getDragTarget(dragTargetId) {\n    let dragTarget;\n    nodeList.map(value => {\n      if (value.id == dragTargetId) {\n        dragTarget = value;\n      }\n    });\n    return dragTarget;\n  }\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DndProvider, {\n      backend: MultiBackend,\n      options: getBackendOptions(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.app,\n        children: /*#__PURE__*/_jsxDEV(Tree, {\n          tree: treeData,\n          rootId: 0,\n          initialOpen: true,\n          render: (node, _ref) => {\n            let {\n              depth,\n              isOpen,\n              onToggle,\n              isDragging,\n              isDropTarget,\n              hasChild\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(CustomNode, {\n              node: node,\n              depth: depth,\n              isOpen: isOpen,\n              onToggle: onToggle,\n              isDragging: isDragging,\n              isDropTarget: isDropTarget,\n              draggingNode: draggingNode,\n              hasChild: hasChild,\n              updateNode: value => {\n                updateNode(value, depth, hasChild);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this);\n          },\n          dragPreviewRender: monitorProps => /*#__PURE__*/_jsxDEV(CustomDragPreview, {\n            monitorProps: monitorProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this),\n          onDrop: handleDrop,\n          canDrop: (treeData, _ref2) => {\n            let {\n              dragSource,\n              dropTarget,\n              dropTargetId,\n              dragSourceId\n            } = _ref2;\n            if (dragSource != dropTarget) {\n              let dropT = getDropTarget(dropTargetId);\n              let dragT = getDragTarget(dragSourceId);\n              if (dropT != null) {\n                if (dropT.data.fileType != \"text\") {\n                  if (dropT.depth >= 1) {\n                    if (dragSource.data.fileType == \"text\") {\n                      return true;\n                    } else {\n                      return false;\n                    }\n                    //return false;\n                  } else {\n                    if (dragT.hasChild) {\n                      if (checkChildIsFolder(dragSourceId)) {\n                        return false;\n                      } else {\n                        return true;\n                      }\n                    } else {\n                      return true;\n                    }\n                  }\n                }\n              }\n            }\n          },\n          classes: {\n            root: styles.treeRoot,\n            draggingSource: styles.draggingSource,\n            dropTarget: styles.dropTarget\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VTBHYCCrZhoTyYfxYzY0z/QzAU4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ThemeProvider","CssBaseline","DndProvider","Tree","MultiBackend","getBackendOptions","CustomNode","CustomDragPreview","theme","styles","SampleData","jsxDEV","_jsxDEV","App","_s","treeData","setTreeData","handleDrop","newTree","draggingNode","setDraggingNode","nodeList","setNodeList","updateNode","node","depth","hasChild","checkExist","map","value","id","parent","push","checkChildIsFolder","parentID","fileExist","data","fileType","getDropTarget","dropTargetId","dropTarget","getDragTarget","dragTargetId","dragTarget","children","fileName","_jsxFileName","lineNumber","columnNumber","backend","options","className","app","tree","rootId","initialOpen","render","_ref","isOpen","onToggle","isDragging","isDropTarget","dragPreviewRender","monitorProps","onDrop","canDrop","_ref2","dragSource","dragSourceId","dropT","dragT","classes","root","treeRoot","draggingSource","_c","$RefreshReg$"],"sources":["/Users/NI017/Downloads/project1/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ThemeProvider, CssBaseline } from \"@mui/material\";\nimport { DndProvider } from \"react-dnd\";\nimport {\n  Tree,\n  MultiBackend,\n  getBackendOptions\n} from \"@minoru/react-dnd-treeview\";\nimport { CustomNode } from \"./CustomNode\";\nimport { CustomDragPreview } from \"./CustomDragPreview\";\nimport { theme } from \"./theme\";\nimport styles from \"./App.module.css\";\nimport SampleData from \"./sample_data.json\";\n\nfunction App() {\n  const [treeData, setTreeData] = useState(SampleData);\n  const handleDrop = (newTree) => setTreeData(newTree);\n  const [draggingNode, setDraggingNode] = useState();\n  const [nodeList, setNodeList] = useState([]);\n\n  function updateNode(node, depth, hasChild) {\n    let checkExist = false;\n    nodeList.map((value) => {\n      if (value.id == node.id) {\n        value.depth = depth;\n        value.hasChild = hasChild;\n        value.parent = node.parent;\n        checkExist = true;\n      }\n    });\n    if (checkExist) {\n      setNodeList(nodeList);\n    } else {\n      node.depth = depth;\n      node.hasChild = hasChild;\n      nodeList.push(node);\n      setNodeList(nodeList);\n    }\n  }\n\n  function checkChildIsFolder(parentID) {\n    let fileExist = false;\n\n    nodeList.map((value) => {\n      if (value.parent == parentID) {\n        if (value.data.fileType != \"text\") {\n          fileExist = true;\n        }\n      }\n    });\n    return fileExist;\n  }\n  function getDropTarget(dropTargetId) {\n    let dropTarget;\n\n    nodeList.map((value) => {\n      if (value.id == dropTargetId) {\n        dropTarget = value;\n      }\n    });\n    return dropTarget;\n  }\n\n  function getDragTarget(dragTargetId) {\n    let dragTarget;\n\n    nodeList.map((value) => {\n      if (value.id == dragTargetId) {\n        dragTarget = value;\n      }\n    });\n    return dragTarget;\n  }\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <DndProvider backend={MultiBackend} options={getBackendOptions()}>\n        <div className={styles.app}>\n          <Tree\n            tree={treeData}\n            rootId={0}\n            initialOpen={true}\n            render={(\n              node,\n              { depth, isOpen, onToggle, isDragging, isDropTarget, hasChild }\n            ) => (\n              <CustomNode\n                node={node}\n                depth={depth}\n                isOpen={isOpen}\n                onToggle={onToggle}\n                isDragging={isDragging}\n                isDropTarget={isDropTarget}\n                draggingNode={draggingNode}\n                hasChild={hasChild}\n                updateNode={(value) => {\n                  updateNode(value, depth, hasChild);\n                }}\n              />\n            )}\n            dragPreviewRender={(monitorProps) => (\n              <CustomDragPreview monitorProps={monitorProps} />\n            )}\n            onDrop={handleDrop}\n            canDrop={(\n              treeData,\n              { dragSource, dropTarget, dropTargetId, dragSourceId }\n            ) => {\n              if (dragSource != dropTarget) {\n                let dropT = getDropTarget(dropTargetId);\n                let dragT = getDragTarget(dragSourceId);\n\n                if (dropT != null) {\n                  if (dropT.data.fileType != \"text\") {\n                    if (dropT.depth >= 1) {\n                      if (dragSource.data.fileType == \"text\") {\n                        return true;\n                      } else {\n                        return false;\n                      }\n                      //return false;\n                    } else {\n                      if (dragT.hasChild) {\n                        if (checkChildIsFolder(dragSourceId)) {\n                          return false;\n                        } else {\n                          return true;\n                        }\n                      } else {\n                        return true;\n                      }\n                    }\n                  }\n                }\n              }\n            }}\n            classes={{\n              root: styles.treeRoot,\n              draggingSource: styles.draggingSource,\n              dropTarget: styles.dropTarget\n            }}\n          />\n        </div>\n      </DndProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
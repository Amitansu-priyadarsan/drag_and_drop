{"ast":null,"code":"export const supportsPassive = (() => {\n  // simular to jQuery's test\n  let supported = false;\n  try {\n    addEventListener('test', () => {\n      // do nothing\n    }, Object.defineProperty({}, 'passive', {\n      get() {\n        supported = true;\n        return true;\n      }\n    }));\n  } catch (e) {\n    // do nothing\n  }\n  return supported;\n})();","map":{"version":3,"sources":["../../src/utils/supportsPassive.ts"],"names":["supportsPassive","supported","addEventListener","Object","defineProperty","get","e"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAG,CAAC,MAAe;EAC9C;EACA,IAAIC,SAAS,GAAG,KAAK;EACrB,IAAI;IACHC,gBAAgB,CACf,MAAM,EACN,MAAM;MACL;IAAA,CACA,EACDC,MAAM,CAACC,cAAc,CAAC,CAAA,CAAE,EAAE,SAAS,EAAE;MACpCC,GAAG,CAAA,EAAG;QACLJ,SAAS,GAAG,IAAI;QAChB,OAAO,IAAI;MACX;KACD,CAAC,CACF;GACD,CAAC,OAAOK,CAAC,EAAE;IACX;EAAA;EAED,OAAOL,SAAS;CAChB,EAAC,CAAE","sourcesContent":["export const supportsPassive = ((): boolean => {\n\t// simular to jQuery's test\n\tlet supported = false\n\ttry {\n\t\taddEventListener(\n\t\t\t'test',\n\t\t\t() => {\n\t\t\t\t// do nothing\n\t\t\t},\n\t\t\tObject.defineProperty({}, 'passive', {\n\t\t\t\tget() {\n\t\t\t\t\tsupported = true\n\t\t\t\t\treturn true\n\t\t\t\t},\n\t\t\t}),\n\t\t)\n\t} catch (e) {\n\t\t// do nothing\n\t}\n\treturn supported\n})()\n"]},"metadata":{},"sourceType":"module"}
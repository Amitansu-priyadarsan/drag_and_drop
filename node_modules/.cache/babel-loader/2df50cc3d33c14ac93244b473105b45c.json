{"ast":null,"code":"var _jsxFileName = \"/Users/NI017/Downloads/project1/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { ThemeProvider, CssBaseline, Box, Button, Typography } from \"@mui/material\";\nimport { DndProvider } from \"react-dnd\";\nimport { Tree, MultiBackend, getBackendOptions } from \"@minoru/react-dnd-treeview\";\nimport { CustomNode } from \"./CustomNode\";\nimport { CustomDragPreview } from \"./CustomDragPreview\";\nimport { theme } from \"./theme\";\nimport styles from \"./App.module.css\";\nimport initialData from \"./sample_data.json\";\nimport { saveTree } from \"./api\";\nimport { TreeConnectors } from \"./TreeConnectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [treeData, setTreeData] = useState(initialData);\n  const [addingToParent, setAddingToParent] = useState(null);\n  const [highlightedNode, setHighlightedNode] = useState(null);\n  const treeRef = useRef(null);\n  const [nodePositions, setNodePositions] = useState({});\n  const [containerRect, setContainerRect] = useState({\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0\n  });\n  const nodeRefs = useRef({});\n  const treeContainerRef = useRef(null);\n\n  // Measure node positions after every render\n  React.useLayoutEffect(() => {\n    const positions = {};\n    for (const node of treeData) {\n      const ref = nodeRefs.current[node.id];\n      if (ref && ref.current) {\n        positions[node.id] = ref.current.getBoundingClientRect();\n      }\n    }\n    if (treeContainerRef.current) {\n      setContainerRect(treeContainerRef.current.getBoundingClientRect());\n    }\n    setNodePositions(positions);\n  }, [treeData, addingToParent, highlightedNode]);\n  const handleDrop = newTree => setTreeData(newTree);\n  const handleSaveAll = async () => {\n    try {\n      await saveTree(treeData);\n      // You can add a success notification here, e.g., using a snackbar.\n      alert(\"Tree structure saved successfully!\");\n    } catch (error) {\n      // You can add an error notification here.\n      alert(\"Failed to save tree structure.\");\n      console.error(error);\n    }\n  };\n  const handleStartAdd = parentId => {\n    var _treeRef$current;\n    setAddingToParent(parentId);\n    (_treeRef$current = treeRef.current) === null || _treeRef$current === void 0 ? void 0 : _treeRef$current.open(parentId);\n  };\n  const handleCancelAdd = () => {\n    setAddingToParent(null);\n  };\n  const handleAddNode = (parentId, text) => {\n    const newNode = {\n      id: Date.now(),\n      // In a real app, use a more robust ID generation.\n      parent: parentId,\n      text,\n      droppable: true\n    };\n    setTreeData([...treeData, newNode]);\n    setAddingToParent(null);\n\n    // Highlight the new node briefly\n    setHighlightedNode(newNode.id);\n    setTimeout(() => {\n      setHighlightedNode(null);\n    }, 2000); // Highlight for 2 seconds\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DndProvider, {\n      backend: MultiBackend,\n      options: getBackendOptions(),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: styles.app,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: styles.header,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: styles.headerTitle,\n            children: \"Hierarchy tree\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: styles.headerControls,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              className: styles.nodeCountLabel,\n              children: \"Groups created:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              className: styles.nodeCount,\n              children: treeData.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: styles.treeContainer,\n          ref: treeContainerRef,\n          style: {\n            position: \"relative\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TreeConnectors, {\n            treeData: treeData,\n            nodePositions: nodePositions,\n            containerRect: containerRect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tree, {\n            ref: treeRef,\n            tree: treeData,\n            rootId: 0,\n            initialOpen: true,\n            onDrop: handleDrop,\n            classes: {\n              root: styles.treeRoot,\n              draggingSource: styles.draggingSource,\n              dropTarget: styles.dropTarget\n            },\n            render: (node, _ref) => {\n              let {\n                depth,\n                isOpen,\n                onToggle\n              } = _ref;\n              const children = treeData.filter(n => n.parent === node.parent);\n              const isLastChild = children[children.length - 1].id === node.id;\n              if (!nodeRefs.current[node.id]) nodeRefs.current[node.id] = /*#__PURE__*/React.createRef();\n              return /*#__PURE__*/_jsxDEV(CustomNode, {\n                ref: nodeRefs.current[node.id],\n                node: node,\n                depth: depth,\n                isOpen: isOpen,\n                onToggle: onToggle,\n                isAdding: addingToParent === node.id,\n                onStartAdd: handleStartAdd,\n                onAdd: handleAddNode,\n                onCancelAdd: handleCancelAdd,\n                isHighlighted: highlightedNode === node.id,\n                isLastChild: isLastChild\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this);\n            },\n            dragPreviewRender: monitorProps => /*#__PURE__*/_jsxDEV(CustomDragPreview, {\n              monitorProps: monitorProps\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: styles.footer,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: () => setTreeData(initialData),\n            className: styles.footerButton,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleSaveAll,\n            className: styles.footerButton,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XNdSxna04EaimqPPbcZ4xToAtcg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","ThemeProvider","CssBaseline","Box","Button","Typography","DndProvider","Tree","MultiBackend","getBackendOptions","CustomNode","CustomDragPreview","theme","styles","initialData","saveTree","TreeConnectors","jsxDEV","_jsxDEV","App","_s","treeData","setTreeData","addingToParent","setAddingToParent","highlightedNode","setHighlightedNode","treeRef","nodePositions","setNodePositions","containerRect","setContainerRect","left","top","width","height","nodeRefs","treeContainerRef","useLayoutEffect","positions","node","ref","current","id","getBoundingClientRect","handleDrop","newTree","handleSaveAll","alert","error","console","handleStartAdd","parentId","_treeRef$current","open","handleCancelAdd","handleAddNode","text","newNode","Date","now","parent","droppable","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","backend","options","className","app","header","variant","headerTitle","headerControls","nodeCountLabel","nodeCount","length","treeContainer","style","position","tree","rootId","initialOpen","onDrop","classes","root","treeRoot","draggingSource","dropTarget","render","_ref","depth","isOpen","onToggle","filter","n","isLastChild","createRef","isAdding","onStartAdd","onAdd","onCancelAdd","isHighlighted","dragPreviewRender","monitorProps","footer","onClick","footerButton","_c","$RefreshReg$"],"sources":["/Users/NI017/Downloads/project1/src/App.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport {\n  ThemeProvider,\n  CssBaseline,\n  Box,\n  Button,\n  Typography,\n} from \"@mui/material\";\nimport { DndProvider } from \"react-dnd\";\nimport {\n  Tree,\n  MultiBackend,\n  getBackendOptions,\n} from \"@minoru/react-dnd-treeview\";\nimport { CustomNode } from \"./CustomNode\";\nimport { CustomDragPreview } from \"./CustomDragPreview\";\nimport { theme } from \"./theme\";\nimport styles from \"./App.module.css\";\nimport initialData from \"./sample_data.json\";\nimport { saveTree } from \"./api\";\nimport { TreeConnectors } from \"./TreeConnectors\";\n\nfunction App() {\n  const [treeData, setTreeData] = useState(initialData);\n  const [addingToParent, setAddingToParent] = useState(null);\n  const [highlightedNode, setHighlightedNode] = useState(null);\n  const treeRef = useRef(null);\n  const [nodePositions, setNodePositions] = useState({});\n  const [containerRect, setContainerRect] = useState({ left: 0, top: 0, width: 0, height: 0 });\n  const nodeRefs = useRef({});\n  const treeContainerRef = useRef(null);\n\n  // Measure node positions after every render\n  React.useLayoutEffect(() => {\n    const positions = {};\n    for (const node of treeData) {\n      const ref = nodeRefs.current[node.id];\n      if (ref && ref.current) {\n        positions[node.id] = ref.current.getBoundingClientRect();\n      }\n    }\n    if (treeContainerRef.current) {\n      setContainerRect(treeContainerRef.current.getBoundingClientRect());\n    }\n    setNodePositions(positions);\n  }, [treeData, addingToParent, highlightedNode]);\n\n  const handleDrop = (newTree) => setTreeData(newTree);\n\n  const handleSaveAll = async () => {\n    try {\n      await saveTree(treeData);\n      // You can add a success notification here, e.g., using a snackbar.\n      alert(\"Tree structure saved successfully!\");\n    } catch (error) {\n      // You can add an error notification here.\n      alert(\"Failed to save tree structure.\");\n      console.error(error);\n    }\n  };\n\n  const handleStartAdd = (parentId) => {\n    setAddingToParent(parentId);\n    treeRef.current?.open(parentId);\n  };\n\n  const handleCancelAdd = () => {\n    setAddingToParent(null);\n  };\n\n  const handleAddNode = (parentId, text) => {\n    const newNode = {\n      id: Date.now(), // In a real app, use a more robust ID generation.\n      parent: parentId,\n      text,\n      droppable: true,\n    };\n\n    setTreeData([...treeData, newNode]);\n    setAddingToParent(null);\n\n    // Highlight the new node briefly\n    setHighlightedNode(newNode.id);\n    setTimeout(() => {\n      setHighlightedNode(null);\n    }, 2000); // Highlight for 2 seconds\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <DndProvider backend={MultiBackend} options={getBackendOptions()}>\n        <Box className={styles.app}>\n          <Box className={styles.header}>\n            <Typography variant=\"h6\" className={styles.headerTitle}>\n              Hierarchy tree\n            </Typography>\n            <Box className={styles.headerControls}>\n              <Typography variant=\"body2\" className={styles.nodeCountLabel}>\n                Groups created:\n              </Typography>\n              <Typography variant=\"body2\" className={styles.nodeCount}>\n                {treeData.length}\n              </Typography>\n            </Box>\n          </Box>\n          <Box className={styles.treeContainer} ref={treeContainerRef} style={{ position: \"relative\" }}>\n            <TreeConnectors treeData={treeData} nodePositions={nodePositions} containerRect={containerRect} />\n            <Tree\n              ref={treeRef}\n              tree={treeData}\n              rootId={0}\n              initialOpen\n              onDrop={handleDrop}\n              classes={{\n                root: styles.treeRoot,\n                draggingSource: styles.draggingSource,\n                dropTarget: styles.dropTarget,\n              }}\n              render={(node, { depth, isOpen, onToggle }) => {\n                const children = treeData.filter((n) => n.parent === node.parent);\n                const isLastChild = children[children.length - 1].id === node.id;\n                if (!nodeRefs.current[node.id]) nodeRefs.current[node.id] = React.createRef();\n                return (\n                  <CustomNode\n                    ref={nodeRefs.current[node.id]}\n                    node={node}\n                    depth={depth}\n                    isOpen={isOpen}\n                    onToggle={onToggle}\n                    isAdding={addingToParent === node.id}\n                    onStartAdd={handleStartAdd}\n                    onAdd={handleAddNode}\n                    onCancelAdd={handleCancelAdd}\n                    isHighlighted={highlightedNode === node.id}\n                    isLastChild={isLastChild}\n                  />\n                );\n              }}\n              dragPreviewRender={(monitorProps) => (\n                <CustomDragPreview monitorProps={monitorProps} />\n              )}\n            />\n          </Box>\n          <Box className={styles.footer}>\n            <Button\n              variant=\"outlined\"\n              onClick={() => setTreeData(initialData)}\n              className={styles.footerButton}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"contained\"\n              onClick={handleSaveAll}\n              className={styles.footerButton}\n            >\n              Save\n            </Button>\n          </Box>\n        </Box>\n      </DndProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SACEC,aAAa,EACbC,WAAW,EACXC,GAAG,EACHC,MAAM,EACNC,UAAU,QACL,eAAe;AACtB,SAASC,WAAW,QAAQ,WAAW;AACvC,SACEC,IAAI,EACJC,YAAY,EACZC,iBAAiB,QACZ,4BAA4B;AACnC,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,SAASC,KAAK,QAAQ,SAAS;AAC/B,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAACe,WAAW,CAAC;EACrD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC0B,eAAe,EAAEC,kBAAkB,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM4B,OAAO,GAAG3B,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAM,CAAC4B,aAAa,EAAEC,gBAAgB,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAAC+B,aAAa,EAAEC,gBAAgB,CAAC,GAAGhC,QAAQ,CAAC;IAAEiC,IAAI,EAAE,CAAC;IAAEC,GAAG,EAAE,CAAC;IAAEC,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,CAAC;EAC5F,MAAMC,QAAQ,GAAGpC,MAAM,CAAC,CAAC,CAAC,CAAC;EAC3B,MAAMqC,gBAAgB,GAAGrC,MAAM,CAAC,IAAI,CAAC;;EAErC;EACAF,KAAK,CAACwC,eAAe,CAAC,MAAM;IAC1B,MAAMC,SAAS,GAAG,CAAC,CAAC;IACpB,KAAK,MAAMC,IAAI,IAAInB,QAAQ,EAAE;MAC3B,MAAMoB,GAAG,GAAGL,QAAQ,CAACM,OAAO,CAACF,IAAI,CAACG,EAAE,CAAC;MACrC,IAAIF,GAAG,IAAIA,GAAG,CAACC,OAAO,EAAE;QACtBH,SAAS,CAACC,IAAI,CAACG,EAAE,CAAC,GAAGF,GAAG,CAACC,OAAO,CAACE,qBAAqB,CAAC,CAAC;MAC1D;IACF;IACA,IAAIP,gBAAgB,CAACK,OAAO,EAAE;MAC5BX,gBAAgB,CAACM,gBAAgB,CAACK,OAAO,CAACE,qBAAqB,CAAC,CAAC,CAAC;IACpE;IACAf,gBAAgB,CAACU,SAAS,CAAC;EAC7B,CAAC,EAAE,CAAClB,QAAQ,EAAEE,cAAc,EAAEE,eAAe,CAAC,CAAC;EAE/C,MAAMoB,UAAU,GAAIC,OAAO,IAAKxB,WAAW,CAACwB,OAAO,CAAC;EAEpD,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMhC,QAAQ,CAACM,QAAQ,CAAC;MACxB;MACA2B,KAAK,CAAC,oCAAoC,CAAC;IAC7C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd;MACAD,KAAK,CAAC,gCAAgC,CAAC;MACvCE,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAME,cAAc,GAAIC,QAAQ,IAAK;IAAA,IAAAC,gBAAA;IACnC7B,iBAAiB,CAAC4B,QAAQ,CAAC;IAC3B,CAAAC,gBAAA,GAAA1B,OAAO,CAACe,OAAO,cAAAW,gBAAA,uBAAfA,gBAAA,CAAiBC,IAAI,CAACF,QAAQ,CAAC;EACjC,CAAC;EAED,MAAMG,eAAe,GAAGA,CAAA,KAAM;IAC5B/B,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMgC,aAAa,GAAGA,CAACJ,QAAQ,EAAEK,IAAI,KAAK;IACxC,MAAMC,OAAO,GAAG;MACdf,EAAE,EAAEgB,IAAI,CAACC,GAAG,CAAC,CAAC;MAAE;MAChBC,MAAM,EAAET,QAAQ;MAChBK,IAAI;MACJK,SAAS,EAAE;IACb,CAAC;IAEDxC,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEqC,OAAO,CAAC,CAAC;IACnClC,iBAAiB,CAAC,IAAI,CAAC;;IAEvB;IACAE,kBAAkB,CAACgC,OAAO,CAACf,EAAE,CAAC;IAC9BoB,UAAU,CAAC,MAAM;MACfrC,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ,CAAC;EAED,oBACER,OAAA,CAACjB,aAAa;IAACW,KAAK,EAAEA,KAAM;IAAAoD,QAAA,gBAC1B9C,OAAA,CAAChB,WAAW;MAAA+D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACflD,OAAA,CAACZ,WAAW;MAAC+D,OAAO,EAAE7D,YAAa;MAAC8D,OAAO,EAAE7D,iBAAiB,CAAC,CAAE;MAAAuD,QAAA,eAC/D9C,OAAA,CAACf,GAAG;QAACoE,SAAS,EAAE1D,MAAM,CAAC2D,GAAI;QAAAR,QAAA,gBACzB9C,OAAA,CAACf,GAAG;UAACoE,SAAS,EAAE1D,MAAM,CAAC4D,MAAO;UAAAT,QAAA,gBAC5B9C,OAAA,CAACb,UAAU;YAACqE,OAAO,EAAC,IAAI;YAACH,SAAS,EAAE1D,MAAM,CAAC8D,WAAY;YAAAX,QAAA,EAAC;UAExD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACblD,OAAA,CAACf,GAAG;YAACoE,SAAS,EAAE1D,MAAM,CAAC+D,cAAe;YAAAZ,QAAA,gBACpC9C,OAAA,CAACb,UAAU;cAACqE,OAAO,EAAC,OAAO;cAACH,SAAS,EAAE1D,MAAM,CAACgE,cAAe;cAAAb,QAAA,EAAC;YAE9D;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACblD,OAAA,CAACb,UAAU;cAACqE,OAAO,EAAC,OAAO;cAACH,SAAS,EAAE1D,MAAM,CAACiE,SAAU;cAAAd,QAAA,EACrD3C,QAAQ,CAAC0D;YAAM;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNlD,OAAA,CAACf,GAAG;UAACoE,SAAS,EAAE1D,MAAM,CAACmE,aAAc;UAACvC,GAAG,EAAEJ,gBAAiB;UAAC4C,KAAK,EAAE;YAAEC,QAAQ,EAAE;UAAW,CAAE;UAAAlB,QAAA,gBAC3F9C,OAAA,CAACF,cAAc;YAACK,QAAQ,EAAEA,QAAS;YAACO,aAAa,EAAEA,aAAc;YAACE,aAAa,EAAEA;UAAc;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClGlD,OAAA,CAACX,IAAI;YACHkC,GAAG,EAAEd,OAAQ;YACbwD,IAAI,EAAE9D,QAAS;YACf+D,MAAM,EAAE,CAAE;YACVC,WAAW;YACXC,MAAM,EAAEzC,UAAW;YACnB0C,OAAO,EAAE;cACPC,IAAI,EAAE3E,MAAM,CAAC4E,QAAQ;cACrBC,cAAc,EAAE7E,MAAM,CAAC6E,cAAc;cACrCC,UAAU,EAAE9E,MAAM,CAAC8E;YACrB,CAAE;YACFC,MAAM,EAAEA,CAACpD,IAAI,EAAAqD,IAAA,KAAkC;cAAA,IAAhC;gBAAEC,KAAK;gBAAEC,MAAM;gBAAEC;cAAS,CAAC,GAAAH,IAAA;cACxC,MAAM7B,QAAQ,GAAG3C,QAAQ,CAAC4E,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACrC,MAAM,KAAKrB,IAAI,CAACqB,MAAM,CAAC;cACjE,MAAMsC,WAAW,GAAGnC,QAAQ,CAACA,QAAQ,CAACe,MAAM,GAAG,CAAC,CAAC,CAACpC,EAAE,KAAKH,IAAI,CAACG,EAAE;cAChE,IAAI,CAACP,QAAQ,CAACM,OAAO,CAACF,IAAI,CAACG,EAAE,CAAC,EAAEP,QAAQ,CAACM,OAAO,CAACF,IAAI,CAACG,EAAE,CAAC,gBAAG7C,KAAK,CAACsG,SAAS,CAAC,CAAC;cAC7E,oBACElF,OAAA,CAACR,UAAU;gBACT+B,GAAG,EAAEL,QAAQ,CAACM,OAAO,CAACF,IAAI,CAACG,EAAE,CAAE;gBAC/BH,IAAI,EAAEA,IAAK;gBACXsD,KAAK,EAAEA,KAAM;gBACbC,MAAM,EAAEA,MAAO;gBACfC,QAAQ,EAAEA,QAAS;gBACnBK,QAAQ,EAAE9E,cAAc,KAAKiB,IAAI,CAACG,EAAG;gBACrC2D,UAAU,EAAEnD,cAAe;gBAC3BoD,KAAK,EAAE/C,aAAc;gBACrBgD,WAAW,EAAEjD,eAAgB;gBAC7BkD,aAAa,EAAEhF,eAAe,KAAKe,IAAI,CAACG,EAAG;gBAC3CwD,WAAW,EAAEA;cAAY;gBAAAlC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1B,CAAC;YAEN,CAAE;YACFsC,iBAAiB,EAAGC,YAAY,iBAC9BzF,OAAA,CAACP,iBAAiB;cAACgG,YAAY,EAAEA;YAAa;cAAA1C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAChD;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNlD,OAAA,CAACf,GAAG;UAACoE,SAAS,EAAE1D,MAAM,CAAC+F,MAAO;UAAA5C,QAAA,gBAC5B9C,OAAA,CAACd,MAAM;YACLsE,OAAO,EAAC,UAAU;YAClBmC,OAAO,EAAEA,CAAA,KAAMvF,WAAW,CAACR,WAAW,CAAE;YACxCyD,SAAS,EAAE1D,MAAM,CAACiG,YAAa;YAAA9C,QAAA,EAChC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTlD,OAAA,CAACd,MAAM;YACLsE,OAAO,EAAC,WAAW;YACnBmC,OAAO,EAAE9D,aAAc;YACvBwB,SAAS,EAAE1D,MAAM,CAACiG,YAAa;YAAA9C,QAAA,EAChC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEpB;AAAChD,EAAA,CA9IQD,GAAG;AAAA4F,EAAA,GAAH5F,GAAG;AAgJZ,eAAeA,GAAG;AAAC,IAAA4F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}